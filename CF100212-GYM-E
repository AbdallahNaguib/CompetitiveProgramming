#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <unistd.h>


#define ll long long
#define lst(x) x.size()-1
#define ld long double
#define pr pair<ll,ll>
#define loop(i, n) for(int i=0 ; i<n ; ++i)
#define rep(i, x, n) for(int i=x ; i<=n ; ++i)
#define iteloop(type, data, name, it) for(type<data>::iterator it=name.begin() ;it!=name.end() ; ++it)

using namespace __gnu_pbds;
using namespace std;

template<typename T>
using os = tree<T, null_type, less<T>, rb_tree_tag,
        tree_order_statistics_node_update>;

const int N = 2e6 + 5, M = 1e1 + 5, MOD = 1e9 + 7, OO = 1e9;
map<pair<pair<int, int>, string>, ll> mp;
int n, m;

ll dp(int i, int j, string pat) {
    if (i >= n) {
        loop(k, m) {
            if (pat[k] < '3')return 0;
        }
        return 1;
    }
    if (mp.find({{i, j}, pat}) != mp.end())return mp[{{i, j}, pat}];
    ll &res = mp[{{i, j}, pat}];
    if (pat[j] < '3') {
        pat[j]++;
        j++;
        if (j >= m) {
            j = 0;
            i++;
        }
        res = dp(i, j, pat);
    } else if (pat[j + 1] < '3' || pat[j + 2] < '3' || j > m - 3) {
        pat[j] = '1';
        j++;
        if (j >= m) {
            j = 0;
            i++;
        }
        res = dp(i, j, pat);
    } else {
        pat[j] = pat[j + 1] = pat[j + 2] = '3';
        j += 3;
        if (j >= m) {
            j = 0;
            i++;
        }
        res = dp(i, j, pat);
        if (j == 0) {
            j = m - 3;
            i--;
        } else {
            j -= 3;
        }
        pat[j] = '1';
        j++;
        if (j >= m) {
            j = 0;
            i++;
        }
        res += dp(i, j, pat);
    }
    return res;
}

int main() {
    cin.sync_with_stdio(false), cin.tie(0), cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen("in.txt", "rt", stdin);
    // freopen("in.txt", "wt" , stdout);
#endif // ONLINE_JUDGE
    cin >> m >> n;
    string init = "";
    loop(i, m) {
        init.push_back('3');
    }
    cout << dp(0, 0, init) << endl;
}
