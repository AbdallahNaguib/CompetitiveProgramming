#include <bits/stdc++.h>

#define ll long long
#define lst(x) x.size()-1
#define ld long double
#define pr pair<ll,ll>
#define loop(i, n) for(int i=0 ; i<n ; ++i)
#define rep(i, x, n) for(int i=x ; i<=n ; ++i)
#define iteloop(type, data, name, it) for(type<data>::iterator it=name.begin() ;it!=name.end() ; ++it)

using namespace std;

const int N=2, M = 2e3 + 5, MX = 1e9 + 5,MN = -MX ;
ld mat[N][N],res[N][N],tmp[N][N];
void mat_pow(int k){
    for(int i = 0; i < N; i++) {
        for(int j = 0; j < N; j++) res[i][j] = 0;
        res[i][i] = 1;
    }
    while(k) {
        if(k & 1) {
            for(int i = 0; i < N; i++)
                for(int j = 0; j < N; j++) {
                    tmp[i][j] = 0;
                    for(int l = 0; l < N; l++)
                        tmp[i][j] += res[i][l] * mat[l][j];
                }
            for(int i = 0; i < N; i++)
                for(int j = 0; j < N; j++)
                    res[i][j] = tmp[i][j];
        }
        {
            for(int i = 0; i < N; i++)
                for(int j = 0; j < N; j++) {
                    tmp[i][j] = 0;
                    for(int l = 0; l < N; l++)
                        tmp[i][j] += mat[i][l] * mat[l][j];
                }
            for(int i = 0; i < N; i++)
                for(int j = 0; j < N; j++)
                    mat[i][j] = tmp[i][j];
        }
        k >>= 1;
    }
}
int main() {
#ifndef ONLINE_JUDGE
    freopen("std/in.txt", "rt", stdin);
    // freopen("out.txt", "wt", stdout);
#endif
    int t,n,m,p,k;
    scanf("%d",&t);
    int tst=1;
    while(t--){
        scanf("%d%d%d%d",&n,&m,&p,&k);
        ld light=0;
        loop(i,n){
            ld a = ((i+1.) * (n-i) * 2. - 1.) / (double)(n * n);
            loop(j,m){
                ld b = ((j+1.) * (m-j) * 2. - 1.) / (double)(m * m);
                loop(l,p){
                    ld c = ((l+1.) * (p-l) * 2. - 1.) / (double)(p * p);
                    ld prob = a*b*c;
                    mat[1][0] = mat[0][1] = prob;
                    mat[0][0] = mat[1][1] = 1. - prob;
                    mat_pow(k);
                    light+=res[1][0];
                }
            }
        }
        printf("Case %d: %.10Lf\n",tst++,light);
    }
    return 0;
}
