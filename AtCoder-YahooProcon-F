#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <unistd.h>

#define ll long long
#define lst(x) x.size()-1
#define F first
#define S second
#define ld long double
#define pr pair<ll,ll>
#define loop(i, n) for(int i=0 ; i<n ; ++i)
#define rep(i, x, n) for(int i=x ; i<=n ; ++i)
#define iteloop(type, data, name, it) for(type<data>::iterator it=name.begin() ;it!=name.end() ; ++it)

using namespace __gnu_pbds;
using namespace std;

template<typename T>
using os = tree<T, null_type, less<T>, rb_tree_tag,
        tree_order_statistics_node_update>;

const ll N = 4e3+5,MOD=998244353,MX=1e9+1,MN=0, M = 2e3 + 5;
int memo[N][N],cntR[N],cntB[N],comR[N],comB[N],n;
int dp(int i,int r){
    int b=comB[i]-(i-(comR[i]-r));
    if(b<0 or r<0)return 0;
    if(i>=2*n)return 1;
    int &res=memo[i][r];
    if(~res)return res;
    res=0;
    if(r)
        res+=dp(i+1,r-1+cntR[i+1]);
    res%=MOD;
    if(b)
        res+=dp(i+1,r+cntR[i+1]);
    res%=MOD;
    return res;
}
int main() {
#ifdef CLION
    freopen("std/in.txt", "rt", stdin);
    // freopen("out.txt", "wt", stdout);
#endif
    memset(memo,-1,sizeof(memo));
    string str;
    cin>>str;
    n=str.size();
    loop(i,n){
        if(str[i]=='0'){
            comR[i]=2;
            comB[i]=0;
            cntR[i]=2;
            cntB[i]=0;
        }else if(str[i]=='1'){
            comR[i]=1;
            comB[i]=1;
            cntR[i]=1;
            cntB[i]=1;
        }else{
            comR[i]=0;
            comB[i]=2;
            cntR[i]=0;
            cntB[i]=2;
        }
        if(i){
            comR[i]+=comR[i-1];
            comB[i]+=comB[i-1];
        }
    }
    rep(i,n,2*n){
        comR[i]=comR[i-1];
        comB[i]=comB[i-1];
    }
    int res=0;
    res+=dp(0,cntR[0]);
    res%=MOD;
    cout<<res<<endl;
    return 0;
}
